// Mocks generated by Mockito 5.4.3 from annotations
// in flutter_case_yunus6116/test/features/movies/data/data_sources/local/DAO/movie_dao_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_case_yunus6116/features/movies/data/models/movie.dart'
    as _i5;
import 'package:flutter_case_yunus6116/features/movies/data/models/movie_response.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:retrofit/dio.dart' as _i2;

import 'movie_dao_test.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHttpResponse_0<T> extends _i1.SmartFake
    implements _i2.HttpResponse<T> {
  _FakeHttpResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MockMovieDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockMockMovieDao extends _i1.Mock implements _i3.MockMovieDao {
  MockMockMovieDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> insertMovie(_i5.MovieModel? movie) => (super.noSuchMethod(
        Invocation.method(
          #insertMovie,
          [movie],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteMovie(_i5.MovieModel? movie) => (super.noSuchMethod(
        Invocation.method(
          #deleteMovie,
          [movie],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i5.MovieModel>> getMovies() => (super.noSuchMethod(
        Invocation.method(
          #getMovies,
          [],
        ),
        returnValue: _i4.Future<List<_i5.MovieModel>>.value(<_i5.MovieModel>[]),
      ) as _i4.Future<List<_i5.MovieModel>>);
}

/// A class which mocks [MockMovieApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMockMovieApiService extends _i1.Mock
    implements _i3.MockMovieApiService {
  MockMockMovieApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.HttpResponse<_i6.MovieResponseModel>> getAllMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllMovies,
          [],
        ),
        returnValue: _i4.Future<_i2.HttpResponse<_i6.MovieResponseModel>>.value(
            _FakeHttpResponse_0<_i6.MovieResponseModel>(
          this,
          Invocation.method(
            #getAllMovies,
            [],
          ),
        )),
      ) as _i4.Future<_i2.HttpResponse<_i6.MovieResponseModel>>);
}
